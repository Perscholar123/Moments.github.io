split terminal 

-> cd client
    npm create-react-app ./

-> cd server 
    npm init -y
    npm install body-parser cors express mongoose nodemon 
    
 ->server=>   cd index.js
    import all the packages 
    pkg.json=>  "main": "index.js",
                "type": "module",
                "scripts": {
                    "start": "nodemon index.js"}

-> client=> npm install axios moment react-file-base64 redux redux-thunk
            npm uninstall react react-dom
            npm install react@17 react-dom@17
            
            delete all files from src folder-> create index.js , App.js
            npm run start

-> server=> 
    setting up the middleware in index.js
    set the db in mongodb atlas => username: memories and password: memory1234
 mongodb+srv://memories:<password>@cluster0.rv4zk.mongodb.net/?retryWrites=true&w=majority

    npm i dotenv
    npm start
    
    create  a routes folder-> posts.js
        export router and import in index.js with middleware
    create a controllers folder-> posts.js
        export controller and import in router/posts.js
    create models folder-> postMessage.js
        create model schema
    update the routes in routes
    update the getpost and createpost in controllers
   check the browser=> localhost:5000/posts

server=> terminal-> npm install @material-ui/core
        create folder structure Posts, Post and Form with styles.js
        terminal=> npm start
        import and do styling to all the styles.js and call the respective classnames 
         create folder api/index.js => import axios
         create folder actions/posts.js
         create folder reducers/index.js reducers/posts.js

         npm install react-redux
    npm start
    define useeffect in App.js -> useSelectors in com/posts/posts.js -> 
            export getPosts in actions/posts.js -> call the action in switch in reducers/posts.js ->
            pkg.json=> to remove the network error -> add -> "proxy": "http://localhost:5000",

            rerun the app -> npm start
            but bug was not fixed, so go to server->index.js->move app.use(posts) after cors()

        create a form in form/form.js
        importing api -> api/index.js
        export createpost -> actions/posts
        dispatch post -> form/form.js
        call the post-> reducers/posts.js

        submit the form from browser and check the database in backend

        declare posts in Posts/posts.js
        declare each post in Posts/Post/Posts.js

        install material-icon => npm install @material-ui/icons
            npm start

        create a new file in src folder=> index.css
            import the file in index.jss
                copy the css output from svgbackgrounds.com-> paste in index.css

client=> routes/posts.js-> update the routes
        controllers/posts.js-> update the updatePost

server=> components/form/form.js-> get the id
         components/posts/post/post.js->
         app.js-> import useState hook-> 


server=>to hide the database url, pwd, port
        create .env file=> 
        PORT = 5000
        CONNECTION_URL = mongodb+srv://memories:memory1234@cluster0.rv4zk.mongodb.net/memories?retryWrites=true&w=majority

        terminal=> npm i dotenv
        index.js=> import dotenv from 'dotenv';
                   dotenv.config();
                   mongoose.connect(process.env.CONNECTION_URL, {}).then().catch();


deploying the web=>
backend=> heroku.com=> 
frontend=> netlify.com=> 

user authentication=>
memory_auth
memory_auth123

client=> npm install jwt-decode react-google-login
server=> npm install bcryptjs jsonwebtoken
both=> npm install
npm start

client=> npm install react-router-dom@5
   



         